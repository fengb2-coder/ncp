#!/usr/bin/env python3
import rospy
from geometry_msgs.msg import Twist, Vector3
from sensor_msgs.msg import LaserScan
import numpy as np
import tensorflow as tf
import kerasncp as kncp
from kerasncp.tf import LTCCell


path = '/home/laiy/gitrepos/cyber/ws/src/Jackal_NCP/rosbag/model/model'
model = tf.keras.models.load_model(path)

class Handler: 
    def __init__(self):
        self.angularz = []
        self.cmd_pub = rospy.Publisher("/cmd_vel", Twist, queue_size = 10)
        self.scan_sub = rospy.Subscriber("/front/scan", LaserScan, self.scan_callback)

        print("INIT COMPLETE")


    def scan_callback(self, data):
        # print("data.ranges ", np.shape(data.ranges))
        ranges = np.transpose(np.asarray([data.ranges])).astype(np.float32)
        # print("ranges ", np.shape(ranges))
        input = np.array([[ranges]])
        # print("input ", np.shape(input))
        pred = model(input).numpy()
        self.angularz = pred[0][0][0]
        # print("pred = ", self.angularz)
        self.cmd_pub.publish(Twist(linear = Vector3(x = 0.5, y = 0.0, z = 0.0), angular = Vector3(x = 0, y = 0, z = self.angularz)))




def main():
    rospy.init_node('load_model', anonymous = True)
    handler = Handler()
    rospy.spin()


if __name__=='__main__':
    try:
        main()
    except rospy.ROSInterruptException:
        pass